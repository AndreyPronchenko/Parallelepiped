console.log('Через поля класса реализуются такие характеристики, как марка, цвет, объем топливного бака (в литрах), норма потребления бензина (литров на 100 километров). Предусмотреть, кроме прочего, наличие метода, позволяющего вычислить расстояние, которое проедет автомобиль, израсходовав полный бак бензина (вычисляется как умноженное на 100 отношение объема топливного бака к норме потребления бензина). На основе класса путем наследования создать производный класс для описания «грузового автомобиля». Добавить поле, описывающее грузоподъемность автомобиля (максимальная масса груза в тоннах, которую может перевозить автомобиль) и метод, позволяющий вычислить себестоимость транспортировки одной тонны груза на один километр. Результат метода рассчитывается так: норма потребления бензина делится на 100, умножается на цену литра бензина и делится на грузоподъемность. Цена литра бензина передается аргументом методу');
console.log('Решение:');
class Car{
    price=51;// время за которое надо проехать какое-то расстояние
    constructor(brand, color, fuel, gasoline) {
        this.brand = brand;// марка автомобиля
        this.color = color;// цвет автомобиля
        this.fuel = +fuel;// объем топливного бака
        this.gasoline = +gasoline;// норма потребления бензина
        this.fuel = +fuel;
}

go(){
    console.log("Расстояние автомобиля " + this.brand + ' на полном баке бензина' + " = " + this.fuel / this.gasoline * 100 + " km.");
}
}
const car1 = new Car('VW', 'White', 55, 8.2);

car1.go();


class Truck extends Car {
    constructor(weight, transportation, price, gasline) {
    super(price);
    this.weight = +weight;// грузоподъемность автомобиля
    this.transportation = +transportation;// себестоимость транспортировки
    this.gasline = +gasline;// норма потребления бензина
    }

        go(){
        console.log('Себестоимость транспортировки одной тонны груза на один километр равна: ' + this.gasline / 100 * this.price / this.weight + " руб.");
            }
        }
        const truck1 = new Truck(5, 105, 51, 25);

        truck1.go();

        //   Паралелепипед

        console.log('Предусмотреть наличие конструктора и метода для отображения характеристик объекта. Рассмотрите механизм наследования, создав на основе класса производный с дополнительным полем, определяющим массу «параллелепипеда». Добавить в производном классе метод для вычисления плотности материала, из которого сделан «параллелепипед» (массу нужно поделить на объем).');
        console.log('Решение:');

    class Parallelepiped{
        constructor(height, width, length) {
            this.height = height;// высота паралелепипеда
            this.width = width;// ширина паралелепипеда
            this.length = length;// длина паралелепипеда
    }
    setChangeHeight(value) {
        this.height = value;
    }
    setChangeWidth(value) {
        this.width = value;
    }
    setChangeLength(value) {
        this.length = value;
    }

go(){
    console.log('Объем параллелепипеда: ' + this.height * this.width * this.length + ' м3.');
    console.log('Масса параллелепипеда: ' + this.height * this.width * this.length / 1000 + ' кг.');
    console.log('Плотность параллелепипеда: ' + (this.height * this.width * this.length / 1000) / (this.height * this.width * this.length) + ' кг/м3.');
        }
    }
    let paral = new Parallelepiped(3, 9, 6);

    paral.go();
